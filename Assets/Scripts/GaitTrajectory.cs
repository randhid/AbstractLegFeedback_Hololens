//using UnityEngine;
/*
public class GaitTrajectory : MonoBehaviour
{
    public float scale = 50f;
    Vector3 tposition;
    Vector3 tScale = Vector3.one;
    public Transform pointPrefab;

    double[] x = new double[] {0.289,0.289,0.289,0.289,0.288,0.287,0.287,0.286,0.285,0.284,0.282,0.281,0.279,0.278,0.275,0.274,0.271,0.27,0.267,0.265,0.262,0.26,0.258,0.256,0.253,0.251,0.249,0.247,0.245,0.243,0.241,0.239,0.238,0.236,0.234,0.232,0.23,0.228,0.226,0.223,0.221,0.217,0.215,0.212,0.21,0.206,0.204,0.2,0.198,0.195,0.193,0.19,0.187,0.184,0.182,0.18,0.177,0.175,0.173,0.171,0.168,0.166,0.164,0.162,0.159,0.157,0.155,0.153,0.15,0.148,0.145,0.143,0.141,0.138,0.136,0.133,0.13,0.128,0.125,0.123,0.119,0.117,0.114,0.111,0.108,0.106,0.102,0.1,0.096,0.094,0.09,0.088,0.084,0.082,0.078,0.076,0.073,0.071,0.067,0.065,0.062,0.06,0.058,0.056,0.053,0.051,0.049,0.047,0.045,0.043,0.041,0.039,0.038,0.036,0.035,0.032,0.031,0.029,0.028,0.026,0.026,0.023,0.023,0.021,0.02,0.018,0.018,0.016,0.015,0.013,0.012,0.011,0.01,0.008,0.007,0.006,0.005,0.003,0.002,0,-0.001,-0.003,-0.004,-0.006,-0.007,-0.009,-0.01,-0.012,-0.013,-0.015,-0.017,-0.019,-0.02,-0.022,-0.024,-0.026,-0.028,-0.03,-0.031,-0.033,-0.035,-0.037,-0.039,-0.041,-0.043,-0.045,-0.047,-0.048,-0.051,-0.052,-0.055,-0.056,-0.058,-0.06,-0.062,-0.063,-0.066,-0.067,-0.069,-0.07,-0.073,-0.074,-0.076,-0.077,-0.079,-0.08,-0.082,-0.083,-0.085,-0.086,-0.088,-0.089,-0.091,-0.092,-0.094,-0.095,-0.097,-0.098,-0.1,-0.101,-0.102,-0.103,-0.105,-0.106,-0.108,-0.109,-0.11,-0.112,-0.113,-0.115,-0.116,-0.118,-0.119,-0.121,-0.122,-0.124,-0.125,-0.127,-0.129,-0.131,-0.132,-0.134,-0.136,-0.138,-0.14,-0.142,-0.143,-0.146,-0.148,-0.15,-0.152,-0.155,-0.156,-0.159,-0.161,-0.164,-0.165,-0.168,-0.17,-0.173,-0.175,-0.177,-0.179,-0.182,-0.184,-0.186,-0.189,-0.191,-0.193,-0.195,-0.197,-0.199,-0.202,-0.203,-0.206,-0.208,-0.21,-0.212,-0.214,-0.216,-0.218,-0.22,-0.223,-0.224,-0.227,-0.228,-0.231,-0.232,-0.235,-0.236,-0.239,-0.241,-0.243,-0.245,-0.248,-0.25,-0.252,-0.254,-0.257,-0.259,-0.262,-0.264,-0.267,-0.269,-0.271,-0.274,-0.276,-0.278,-0.281,-0.283,-0.286,-0.288,-0.29,-0.293,-0.295,-0.297,-0.299,-0.301,-0.303,-0.305,-0.306,-0.308,-0.31,-0.312,-0.313,-0.314,-0.315,-0.317,-0.318,-0.319,-0.32,-0.321,-0.322,-0.323,-0.324,-0.324,-0.325,-0.326,-0.326,-0.327,-0.327,-0.327,-0.328,-0.328,-0.328,-0.328,-0.328,-0.328,-0.328,-0.328,-0.327,-0.327,-0.326,-0.326,-0.325,-0.325,-0.324,-0.323,-0.322,-0.322,-0.321,-0.32,-0.319,-0.318,-0.317,-0.316,-0.314,-0.314,-0.312,-0.311,-0.309,-0.308,-0.306,-0.305,-0.303,-0.301,-0.299,-0.297,-0.295,-0.293,-0.29,-0.288,-0.285,-0.283,-0.28,-0.277,-0.274,-0.271,-0.268,-0.264,-0.261,-0.257,-0.254,-0.251,-0.247,-0.243,-0.24,-0.236,-0.232,-0.228,-0.225,-0.22,-0.217,-0.213,-0.209,-0.205,-0.201,-0.197,-0.193,-0.188,-0.184,-0.18,-0.176,-0.172,-0.168,-0.164,-0.159,-0.155,-0.151,-0.147,-0.142,-0.138,-0.134,-0.13,-0.125,-0.121,-0.116,-0.112,-0.107,-0.103,-0.098,-0.094,-0.088,-0.084,-0.079,-0.074,-0.069,-0.065,-0.06,-0.055,-0.05,-0.045,-0.04,-0.034,-0.029,-0.024,-0.019,-0.013,-0.008,-0.003,0.002,0.008,0.014,0.02,0.025,0.031,0.036,0.043,0.048,0.055,0.06,0.067,0.072,0.079,0.084,0.091,0.097,0.103,0.109,0.115,0.12,0.127,0.132,0.139,0.144,0.15,0.155,0.161,0.166,0.172,0.176,0.182,0.186,0.192,0.196,0.201,0.205,0.21,0.214,0.219,0.222,0.227,0.23,0.234,0.237,0.241,0.244,0.248,0.251,0.254,0.257,0.26,0.262,0.265,0.267,0.27,0.272,0.274,0.276,0.278,0.28,0.281,0.282,0.284,0.285,0.286,0.286,0.287,0.287,0.288};
    double[] y = new double[] { -0.707,-0.708,-0.708,-0.708,-0.708,-0.708,-0.709,-0.709,-0.709,-0.71,-0.711,-0.711,-0.712,-0.712,-0.713,-0.714,-0.715,-0.715,-0.716,-0.717,-0.718,-0.718,-0.719,-0.72,-0.721,-0.721,-0.722,-0.723,-0.723,-0.724,-0.724,-0.725,-0.726,-0.726,-0.727,-0.728,-0.728,-0.729,-0.729,-0.73,-0.731,-0.732,-0.733,-0.734,-0.734,-0.735,-0.736,-0.737,-0.737,-0.738,-0.738,-0.739,-0.74,-0.74,-0.741,-0.741,-0.742,-0.742,-0.742,-0.743,-0.743,-0.744,-0.744,-0.744,-0.745,-0.745,-0.745,-0.745,-0.746,-0.746,-0.746,-0.747,-0.747,-0.747,-0.747,-0.748,-0.748,-0.748,-0.749,-0.749,-0.749,-0.749,-0.75,-0.75,-0.75,-0.75,-0.751,-0.751,-0.751,-0.751,-0.752,-0.752,-0.752,-0.752,-0.753,-0.753,-0.753,-0.753,-0.753,-0.753,-0.753,-0.754,-0.754,-0.754,-0.754,-0.754,-0.754,-0.754,-0.754,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.756,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.755,-0.754,-0.754,-0.754,-0.754,-0.754,-0.754,-0.753,-0.753,-0.753,-0.753,-0.753,-0.753,-0.752,-0.752,-0.752,-0.752,-0.752,-0.751,-0.751,-0.751,-0.751,-0.751,-0.75,-0.75,-0.75,-0.75,-0.749,-0.749,-0.749,-0.749,-0.748,-0.748,-0.748,-0.747,-0.747,-0.747,-0.746,-0.746,-0.746,-0.745,-0.745,-0.744,-0.744,-0.744,-0.743,-0.743,-0.742,-0.742,-0.741,-0.741,-0.74,-0.739,-0.739,-0.738,-0.738,-0.737,-0.736,-0.736,-0.735,-0.734,-0.734,-0.733,-0.732,-0.732,-0.731,-0.73,-0.73,-0.729,-0.728,-0.727,-0.727,-0.726,-0.725,-0.724,-0.723,-0.723,-0.722,-0.721,-0.72,-0.72,-0.719,-0.718,-0.717,-0.717,-0.716,-0.715,-0.714,-0.714,-0.713,-0.712,-0.711,-0.71,-0.709,-0.708,-0.707,-0.707,-0.705,-0.704,-0.703,-0.702,-0.701,-0.7,-0.699,-0.698,-0.696,-0.695,-0.694,-0.692,-0.691,-0.69,-0.688,-0.687,-0.686,-0.684,-0.683,-0.681,-0.68,-0.678,-0.677,-0.675,-0.674,-0.672,-0.671,-0.669,-0.668,-0.666,-0.665,-0.663,-0.662,-0.66,-0.658,-0.656,-0.655,-0.653,-0.651,-0.649,-0.648,-0.645,-0.644,-0.642,-0.64,-0.638,-0.636,-0.634,-0.632,-0.63,-0.628,-0.624,-0.62,-0.617,-0.613,-0.61,-0.605,-0.602,-0.597,-0.594,-0.588,-0.586,-0.58,-0.578,-0.572,-0.57,-0.565,-0.563,-0.558,-0.556,-0.552,-0.55,-0.546,-0.545,-0.542,-0.541,-0.539,-0.538,-0.537,-0.536,-0.536,-0.536,-0.536,-0.536,-0.536,-0.536,-0.537,-0.538,-0.538,-0.539,-0.54,-0.541,-0.542,-0.544,-0.545,-0.546,-0.548,-0.549,-0.551,-0.552,-0.554,-0.556,-0.557,-0.559,-0.561,-0.563,-0.565,-0.567,-0.569,-0.571,-0.573,-0.575,-0.577,-0.579,-0.581,-0.584,-0.586,-0.588,-0.59,-0.592,-0.595,-0.597,-0.599,-0.601,-0.604,-0.606,-0.608,-0.61,-0.613,-0.615,-0.618,-0.62,-0.622,-0.624,-0.627,-0.629,-0.632,-0.634,-0.636,-0.638,-0.641,-0.643,-0.645,-0.647,-0.65,-0.652,-0.654,-0.656,-0.658,-0.661,-0.662,-0.665,-0.667,-0.669,-0.671,-0.673,-0.675,-0.677,-0.679,-0.681,-0.682,-0.684,-0.686,-0.688,-0.689,-0.691,-0.692,-0.694,-0.695,-0.697,-0.698,-0.7,-0.701,-0.702,-0.703,-0.704,-0.705,-0.706,-0.707,-0.708,-0.708,-0.709,-0.709,-0.71,-0.71,-0.711,-0.711,-0.712,-0.712,-0.712,-0.712,-0.712,-0.713,-0.713,-0.713,-0.713,-0.713,-0.712,-0.712,-0.712,-0.712,-0.712,-0.712,-0.711,-0.711,-0.711,-0.711,-0.71,-0.71,-0.71,-0.71,-0.709,-0.709,-0.709,-0.709,-0.709,-0.709,-0.708,-0.708,-0.708,-0.708,-0.708};
        // Use this for initialization
    void Start()
    {


        for (int i = 0; i < 500; i++)
        {

            Transform tpoint = Instantiate(pointPrefab);
            tposition.x = (float)x[i];
            tposition.y = (float)y[i];
            tposition.z = 0;
            tpoint.position = tposition;
            tpoint.localScale = tScale / scale;
            tpoint.SetParent(transform);
        }

    }

    // Update is called once per frame
    void Update()
    {

    }

}
*/
using UnityEngine;

public class GaitTrajectory : MonoBehaviour
{
    Vector3 tposition;
    Vector3 tScale = Vector3.one;

    double[] x = new double[] { 0.289, 0.289, 0.289, 0.289, 0.288, 0.287, 0.287, 0.286, 0.285, 0.284, 0.282, 0.281, 0.279, 0.278, 0.275, 0.274, 0.271, 0.27, 0.267, 0.265, 0.262, 0.26, 0.258, 0.256, 0.253, 0.251, 0.249, 0.247, 0.245, 0.243, 0.241, 0.239, 0.238, 0.236, 0.234, 0.232, 0.23, 0.228, 0.226, 0.223, 0.221, 0.217, 0.215, 0.212, 0.21, 0.206, 0.204, 0.2, 0.198, 0.195, 0.193, 0.19, 0.187, 0.184, 0.182, 0.18, 0.177, 0.175, 0.173, 0.171, 0.168, 0.166, 0.164, 0.162, 0.159, 0.157, 0.155, 0.153, 0.15, 0.148, 0.145, 0.143, 0.141, 0.138, 0.136, 0.133, 0.13, 0.128, 0.125, 0.123, 0.119, 0.117, 0.114, 0.111, 0.108, 0.106, 0.102, 0.1, 0.096, 0.094, 0.09, 0.088, 0.084, 0.082, 0.078, 0.076, 0.073, 0.071, 0.067, 0.065, 0.062, 0.06, 0.058, 0.056, 0.053, 0.051, 0.049, 0.047, 0.045, 0.043, 0.041, 0.039, 0.038, 0.036, 0.035, 0.032, 0.031, 0.029, 0.028, 0.026, 0.026, 0.023, 0.023, 0.021, 0.02, 0.018, 0.018, 0.016, 0.015, 0.013, 0.012, 0.011, 0.01, 0.008, 0.007, 0.006, 0.005, 0.003, 0.002, 0, -0.001, -0.003, -0.004, -0.006, -0.007, -0.009, -0.01, -0.012, -0.013, -0.015, -0.017, -0.019, -0.02, -0.022, -0.024, -0.026, -0.028, -0.03, -0.031, -0.033, -0.035, -0.037, -0.039, -0.041, -0.043, -0.045, -0.047, -0.048, -0.051, -0.052, -0.055, -0.056, -0.058, -0.06, -0.062, -0.063, -0.066, -0.067, -0.069, -0.07, -0.073, -0.074, -0.076, -0.077, -0.079, -0.08, -0.082, -0.083, -0.085, -0.086, -0.088, -0.089, -0.091, -0.092, -0.094, -0.095, -0.097, -0.098, -0.1, -0.101, -0.102, -0.103, -0.105, -0.106, -0.108, -0.109, -0.11, -0.112, -0.113, -0.115, -0.116, -0.118, -0.119, -0.121, -0.122, -0.124, -0.125, -0.127, -0.129, -0.131, -0.132, -0.134, -0.136, -0.138, -0.14, -0.142, -0.143, -0.146, -0.148, -0.15, -0.152, -0.155, -0.156, -0.159, -0.161, -0.164, -0.165, -0.168, -0.17, -0.173, -0.175, -0.177, -0.179, -0.182, -0.184, -0.186, -0.189, -0.191, -0.193, -0.195, -0.197, -0.199, -0.202, -0.203, -0.206, -0.208, -0.21, -0.212, -0.214, -0.216, -0.218, -0.22, -0.223, -0.224, -0.227, -0.228, -0.231, -0.232, -0.235, -0.236, -0.239, -0.241, -0.243, -0.245, -0.248, -0.25, -0.252, -0.254, -0.257, -0.259, -0.262, -0.264, -0.267, -0.269, -0.271, -0.274, -0.276, -0.278, -0.281, -0.283, -0.286, -0.288, -0.29, -0.293, -0.295, -0.297, -0.299, -0.301, -0.303, -0.305, -0.306, -0.308, -0.31, -0.312, -0.313, -0.314, -0.315, -0.317, -0.318, -0.319, -0.32, -0.321, -0.322, -0.323, -0.324, -0.324, -0.325, -0.326, -0.326, -0.327, -0.327, -0.327, -0.328, -0.328, -0.328, -0.328, -0.328, -0.328, -0.328, -0.328, -0.327, -0.327, -0.326, -0.326, -0.325, -0.325, -0.324, -0.323, -0.322, -0.322, -0.321, -0.32, -0.319, -0.318, -0.317, -0.316, -0.314, -0.314, -0.312, -0.311, -0.309, -0.308, -0.306, -0.305, -0.303, -0.301, -0.299, -0.297, -0.295, -0.293, -0.29, -0.288, -0.285, -0.283, -0.28, -0.277, -0.274, -0.271, -0.268, -0.264, -0.261, -0.257, -0.254, -0.251, -0.247, -0.243, -0.24, -0.236, -0.232, -0.228, -0.225, -0.22, -0.217, -0.213, -0.209, -0.205, -0.201, -0.197, -0.193, -0.188, -0.184, -0.18, -0.176, -0.172, -0.168, -0.164, -0.159, -0.155, -0.151, -0.147, -0.142, -0.138, -0.134, -0.13, -0.125, -0.121, -0.116, -0.112, -0.107, -0.103, -0.098, -0.094, -0.088, -0.084, -0.079, -0.074, -0.069, -0.065, -0.06, -0.055, -0.05, -0.045, -0.04, -0.034, -0.029, -0.024, -0.019, -0.013, -0.008, -0.003, 0.002, 0.008, 0.014, 0.02, 0.025, 0.031, 0.036, 0.043, 0.048, 0.055, 0.06, 0.067, 0.072, 0.079, 0.084, 0.091, 0.097, 0.103, 0.109, 0.115, 0.12, 0.127, 0.132, 0.139, 0.144, 0.15, 0.155, 0.161, 0.166, 0.172, 0.176, 0.182, 0.186, 0.192, 0.196, 0.201, 0.205, 0.21, 0.214, 0.219, 0.222, 0.227, 0.23, 0.234, 0.237, 0.241, 0.244, 0.248, 0.251, 0.254, 0.257, 0.26, 0.262, 0.265, 0.267, 0.27, 0.272, 0.274, 0.276, 0.278, 0.28, 0.281, 0.282, 0.284, 0.285, 0.286, 0.286, 0.287, 0.287, 0.288 };
    double[] y = new double[] { -0.707, -0.708, -0.708, -0.708, -0.708, -0.708, -0.709, -0.709, -0.709, -0.71, -0.711, -0.711, -0.712, -0.712, -0.713, -0.714, -0.715, -0.715, -0.716, -0.717, -0.718, -0.718, -0.719, -0.72, -0.721, -0.721, -0.722, -0.723, -0.723, -0.724, -0.724, -0.725, -0.726, -0.726, -0.727, -0.728, -0.728, -0.729, -0.729, -0.73, -0.731, -0.732, -0.733, -0.734, -0.734, -0.735, -0.736, -0.737, -0.737, -0.738, -0.738, -0.739, -0.74, -0.74, -0.741, -0.741, -0.742, -0.742, -0.742, -0.743, -0.743, -0.744, -0.744, -0.744, -0.745, -0.745, -0.745, -0.745, -0.746, -0.746, -0.746, -0.747, -0.747, -0.747, -0.747, -0.748, -0.748, -0.748, -0.749, -0.749, -0.749, -0.749, -0.75, -0.75, -0.75, -0.75, -0.751, -0.751, -0.751, -0.751, -0.752, -0.752, -0.752, -0.752, -0.753, -0.753, -0.753, -0.753, -0.753, -0.753, -0.753, -0.754, -0.754, -0.754, -0.754, -0.754, -0.754, -0.754, -0.754, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.756, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.755, -0.754, -0.754, -0.754, -0.754, -0.754, -0.754, -0.753, -0.753, -0.753, -0.753, -0.753, -0.753, -0.752, -0.752, -0.752, -0.752, -0.752, -0.751, -0.751, -0.751, -0.751, -0.751, -0.75, -0.75, -0.75, -0.75, -0.749, -0.749, -0.749, -0.749, -0.748, -0.748, -0.748, -0.747, -0.747, -0.747, -0.746, -0.746, -0.746, -0.745, -0.745, -0.744, -0.744, -0.744, -0.743, -0.743, -0.742, -0.742, -0.741, -0.741, -0.74, -0.739, -0.739, -0.738, -0.738, -0.737, -0.736, -0.736, -0.735, -0.734, -0.734, -0.733, -0.732, -0.732, -0.731, -0.73, -0.73, -0.729, -0.728, -0.727, -0.727, -0.726, -0.725, -0.724, -0.723, -0.723, -0.722, -0.721, -0.72, -0.72, -0.719, -0.718, -0.717, -0.717, -0.716, -0.715, -0.714, -0.714, -0.713, -0.712, -0.711, -0.71, -0.709, -0.708, -0.707, -0.707, -0.705, -0.704, -0.703, -0.702, -0.701, -0.7, -0.699, -0.698, -0.696, -0.695, -0.694, -0.692, -0.691, -0.69, -0.688, -0.687, -0.686, -0.684, -0.683, -0.681, -0.68, -0.678, -0.677, -0.675, -0.674, -0.672, -0.671, -0.669, -0.668, -0.666, -0.665, -0.663, -0.662, -0.66, -0.658, -0.656, -0.655, -0.653, -0.651, -0.649, -0.648, -0.645, -0.644, -0.642, -0.64, -0.638, -0.636, -0.634, -0.632, -0.63, -0.628, -0.624, -0.62, -0.617, -0.613, -0.61, -0.605, -0.602, -0.597, -0.594, -0.588, -0.586, -0.58, -0.578, -0.572, -0.57, -0.565, -0.563, -0.558, -0.556, -0.552, -0.55, -0.546, -0.545, -0.542, -0.541, -0.539, -0.538, -0.537, -0.536, -0.536, -0.536, -0.536, -0.536, -0.536, -0.536, -0.537, -0.538, -0.538, -0.539, -0.54, -0.541, -0.542, -0.544, -0.545, -0.546, -0.548, -0.549, -0.551, -0.552, -0.554, -0.556, -0.557, -0.559, -0.561, -0.563, -0.565, -0.567, -0.569, -0.571, -0.573, -0.575, -0.577, -0.579, -0.581, -0.584, -0.586, -0.588, -0.59, -0.592, -0.595, -0.597, -0.599, -0.601, -0.604, -0.606, -0.608, -0.61, -0.613, -0.615, -0.618, -0.62, -0.622, -0.624, -0.627, -0.629, -0.632, -0.634, -0.636, -0.638, -0.641, -0.643, -0.645, -0.647, -0.65, -0.652, -0.654, -0.656, -0.658, -0.661, -0.662, -0.665, -0.667, -0.669, -0.671, -0.673, -0.675, -0.677, -0.679, -0.681, -0.682, -0.684, -0.686, -0.688, -0.689, -0.691, -0.692, -0.694, -0.695, -0.697, -0.698, -0.7, -0.701, -0.702, -0.703, -0.704, -0.705, -0.706, -0.707, -0.708, -0.708, -0.709, -0.709, -0.71, -0.71, -0.711, -0.711, -0.712, -0.712, -0.712, -0.712, -0.712, -0.713, -0.713, -0.713, -0.713, -0.713, -0.712, -0.712, -0.712, -0.712, -0.712, -0.712, -0.711, -0.711, -0.711, -0.711, -0.71, -0.71, -0.71, -0.71, -0.709, -0.709, -0.709, -0.709, -0.709, -0.709, -0.708, -0.708, -0.708, -0.708, -0.708 };
    // Use this for initialization
    void Start()
    {
        LineRenderer lineRenderer = gameObject.AddComponent<LineRenderer>();
        lineRenderer.widthMultiplier = 0.005f;
        lineRenderer.positionCount = 500;
        lineRenderer.receiveShadows = false;
        lineRenderer.shadowCastingMode = UnityEngine.Rendering.ShadowCastingMode.Off;
        lineRenderer.useWorldSpace = false;

        for (int i = 0; i < 500; i++)
        {

            tposition.x = (float)x[i];
            tposition.y = (float)y[i];
            tposition.z = 0;
            lineRenderer.SetPosition(i, tposition);

        }

    }

    // Update is called once per frame
    void Update()
    {

    }

}
